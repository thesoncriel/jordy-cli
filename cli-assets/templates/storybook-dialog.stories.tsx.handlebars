/* eslint-disable no-alert */
import { ComponentProps, useRef, useEffect } from 'react';
import { actions } from '@storybook/addon-actions';
import { StoryFn, StoryObj, Meta, ArgTypes } from '@storybook/react';
import { {{fileName}}, {{fileName}}Handle } from '../{{fileName}}';

interface StoryProps extends ComponentProps<typeof {{fileName}}> {
}

type MyArgTypes = Partial<Record<keyof StoryProps, ArgTypes[string]>>;
const argTypesSetting: MyArgTypes = {
};

export default {
  title: '{{storybookTitle}}/{{fileName}}',
  component: {{fileName}},
  argTypes: argTypesSetting,
  parameters: { actions: { argTypesRegex: '^on.*' } }
} as Meta;

const Template: StoryFn<StoryProps>= ({ ...props }) => {
  const refModal = useRef<{{fileName}}Handle>(null);

  return (
    <div>
      <Button onClick={() => refModal.current?.open()}>열기</Button>
      <{{fileName}} {...props} ref={refModal}></{{fileName}}>
    </div>
  );
};

export const Default: StoryObj<StoryProps> = {
  render: Template,
  args: {
    ...actions('onEvent1', 'onEvent2'),
    defaultShow: true,
  },
};

export const WithTrigger: StoryObj<StoryProps> = {
  render: Template,
  args: {
    ...Default.args,
    defaultShow: false,
  },
};
